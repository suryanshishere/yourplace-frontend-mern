{"version":3,"file":"static/js/743.5e089f0b.chunk.js","mappings":"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","sources":["shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","shared/components/UIElements/Card.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/http-hook.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n\r\n    const mapRef = useRef();\r\n\r\n    const { center, zoom } = props;\r\n\r\n    useEffect(() => {\r\n        \r\n        // const map = new window.google.maps.Map(mapRef.current, {\r\n        //     center: center,\r\n        //     zoom: zoom\r\n        // });\r\n        // new window.google.maps.Marker({ position: center, map: map });\r\n\r\n        const map = new window.Microsoft.Maps.Map(mapRef.current, {\r\n            center: new window.Microsoft.Maps.Location(center.lat, center.lng),\r\n            zoom: zoom\r\n        });\r\n    \r\n        const mapCenter = map.getCenter();\r\n        const pin = new window.Microsoft.Maps.Pushpin(mapCenter);\r\n        map.entities.push(pin);\r\n\r\n    }, [center, zoom])\r\n\r\n    return (\r\n        <div\r\n            ref={mapRef}\r\n            className={`map ${props.className}`}\r\n            style={props.style}\r\n        ></div>\r\n    )\r\n}\r\n\r\nexport default Map","import React, { useContext, useState } from 'react';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceItem.css';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PlaceItem = props => {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n\r\n  const openMapHandler = () => setShowMap(true);\r\n\r\n  const closeMapHandler = () => setShowMap(false);\r\n\r\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\r\n\r\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token\r\n        }\r\n      );\r\n      props.onDelete(props.id);\r\n      navigate('/' + auth.userId + '/places');\r\n    } catch (err) { }\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.isLoggedIn && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.isLoggedIn && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default PlaceItem;","import React from 'react';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = (props) => {\r\n\r\n    if (props.items.length === 0) {\r\n        return (\r\n            <div className=\"place-list center\">\r\n                <Card>\r\n                    <h2>No places found. Maybe create one?</h2>\r\n                    <Button inverse to=\"/places/new\">Share Place</Button>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"place-list\">\r\n            {props.items.map(place => (\r\n                <PlaceItem\r\n                    key={place.id}\r\n                    id={place.id}\r\n                    image={place.image}\r\n                    title={place.title}\r\n                    description={place.description}\r\n                    address={place.address}\r\n                    creatorId={place.creator}\r\n                    coordinates={place.location}\r\n                    onDelete={props.onDeletePlace}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default PlaceList","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport PlaceList from '../components/PlaceList';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\nconst UserPlaces = () => {\r\n\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (err) { }\r\n    };\r\n\r\n    fetchPlaces();\r\n  }, [sendRequest, userId])\r\n\r\n  const placeDeletedHandler = deletedPlaceId => {\r\n    setLoadedPlaces(prevPlaces =>\r\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = (props) => {\r\n    return (\r\n        <Modal\r\n            onCancel={props.onClear}\r\n            header=\"An Error Occurred!\"\r\n            show={!!props.error}\r\n            footer={<Button onClick={props.onClear}>Okay</Button>}\r\n        >\r\n            <p>{props.error}</p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ErrorModal","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = (props) => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form\r\n                onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n}\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <>\r\n            {props.show && <Backdrop onClick={props.onCancel} />}\r\n            <CSSTransition\r\n                in={props.show}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={200}\r\n                classNames=\"modal\"\r\n            >\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Modal","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = 'GET', body = null, headers = {}) => {\r\n            setIsLoading(true);\r\n            const httpAbortCtrl = new AbortController();\r\n            activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method,\r\n                    body,\r\n                    headers,\r\n                    signal: httpAbortCtrl.signal\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                    reqCtrl => reqCtrl !== httpAbortCtrl\r\n                );\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                setIsLoading(false);\r\n                return responseData;\r\n                \r\n            } catch (err) {\r\n                setError(err.message);\r\n                setIsLoading(false);\r\n                throw err;\r\n            }\r\n        },\r\n        []\r\n    );\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        activeHttpRequests.current.forEach(aboutCtrl => aboutCtrl.about());\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n\r\n};"],"names":["props","mapRef","useRef","center","zoom","useEffect","map","window","Microsoft","Maps","Map","current","Location","lat","lng","mapCenter","getCenter","pin","Pushpin","entities","push","_jsx","ref","className","concat","style","navigate","useNavigate","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","showMap","setShowMap","useState","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","_jsxs","_Fragment","children","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","React","inverse","danger","async","process","id","Authorization","token","onDelete","userId","err","Card","LoadingSpinner","asOverlay","src","image","alt","title","description","openMapHandler","isLoggedIn","to","showDeleteWarningHandler","items","length","place","PlaceItem","creatorId","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","PlaceList","deletedPlaceId","prevPlaces","filter","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","setIsLoading","setError","activeHttpRequests","useCallback","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","response","fetch","signal","json","reqCtrl","ok","Error","message","forEach","aboutCtrl","about"],"sourceRoot":""}