{"version":3,"file":"static/js/605.b497e3e7.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/hooks/http-hook.js","shared/util/validators.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './NewPlace.css';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\n\r\nconst NewPlace = () => {\r\n\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      },\r\n    },\r\n    false\r\n  )\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const placeSubmitHandler = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      formData.append('creator', auth.userId);\r\n      formData.append('image', formState.inputs.image.value);\r\n      await sendRequest(process.env.REACT_APP_BACKEND_URL + '/places', 'POST', formData,{\r\n        Authorization: 'Bearer ' + auth.token\r\n      });\r\n\r\n      navigate('/' + auth.userId + '/places');\r\n\r\n    } catch (error) { }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewPlace;","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n\r\n    const filePickerRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (!file) {\r\n            return;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if (event.target.files && event.target.files.length === 1) {\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        } else {\r\n            setIsValid(false);\r\n            fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input\r\n                id={props.id}\r\n                ref={filePickerRef}\r\n                style={{ display: 'none' }}\r\n                type=\"file\"\r\n                accept=\".jpg,.png,.jpeg\"\r\n                onChange={pickedHandler}\r\n            />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n                    {!previewUrl && <p>Please pick an image.</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>\r\n                    PICK IMAGE\r\n                </Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue  || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid  || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = (props) => {\r\n    return (\r\n        <Modal\r\n            onCancel={props.onClear}\r\n            header=\"An Error Occurred!\"\r\n            show={!!props.error}\r\n            footer={<Button onClick={props.onClear}>Okay</Button>}\r\n        >\r\n            <p>{props.error}</p>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ErrorModal","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = (props) => {\r\n    const content = (\r\n        <div className={`modal ${props.className}`} style={props.style}>\r\n            <header className={`modal__header ${props.headerClass}`}>\r\n                <h2>{props.header}</h2>\r\n            </header>\r\n            <form\r\n                onSubmit={\r\n                    props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n                }\r\n            >\r\n                <div className={`modal__content ${props.contentClass}`}>\r\n                    {props.children}\r\n                </div>\r\n                <footer className={`modal__footer ${props.footerClass}`}>\r\n                    {props.footer}\r\n                </footer>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n}\r\n\r\nconst Modal = props => {\r\n    return (\r\n        <>\r\n            {props.show && <Backdrop onClick={props.onCancel} />}\r\n            <CSSTransition\r\n                in={props.show}\r\n                mountOnEnter\r\n                unmountOnExit\r\n                timeout={200}\r\n                classNames=\"modal\"\r\n            >\r\n                <ModalOverlay {...props} />\r\n            </CSSTransition>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Modal","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            }\r\n\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const useForm = (intialInput, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: intialInput,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n}","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState();\r\n\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(\r\n        async (url, method = 'GET', body = null, headers = {}) => {\r\n            setIsLoading(true);\r\n            const httpAbortCtrl = new AbortController();\r\n            activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n            try {\r\n                const response = await fetch(url, {\r\n                    method,\r\n                    body,\r\n                    headers,\r\n                    signal: httpAbortCtrl.signal\r\n                });\r\n\r\n                const responseData = await response.json();\r\n\r\n                activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                    reqCtrl => reqCtrl !== httpAbortCtrl\r\n                );\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(responseData.message);\r\n                }\r\n\r\n                setIsLoading(false);\r\n                return responseData;\r\n                \r\n            } catch (err) {\r\n                setError(err.message);\r\n                setIsLoading(false);\r\n                throw err;\r\n            }\r\n        },\r\n        []\r\n    );\r\n\r\n    const clearError = () => {\r\n        setError(null);\r\n    }\r\n\r\n    useEffect(() => {\r\n        activeHttpRequests.current.forEach(aboutCtrl => aboutCtrl.about());\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n\r\n};","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};"],"names":["NewPlace","auth","useContext","AuthContext","isLoading","error","sendRequest","clearError","useHttpClient","formState","inputHandler","useForm","title","value","isValid","description","address","image","navigate","useNavigate","_jsxs","_Fragment","children","_jsx","ErrorModal","onClear","className","onSubmit","async","e","preventDefault","formData","FormData","append","inputs","userId","process","Authorization","token","LoadingSpinner","asOverlay","Input","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","ImageUpload","Button","disabled","props","file","setFile","useState","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","event","pickedFile","fileIsValid","target","files","length","concat","center","src","alt","onClick","pickImageHandler","current","click","inputReducer","state","action","val","validate","isTouched","inputState","dispatch","useReducer","initialValue","initialValid","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","Modal","onCancel","header","show","footer","ModalOverlay","content","headerClass","contentClass","footerClass","ReactDOM","document","getElementById","Backdrop","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","intialInput","initialFormValidity","useCallback","inputData","formValidity","setIsLoading","setError","activeHttpRequests","url","method","arguments","undefined","body","headers","httpAbortCtrl","AbortController","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","forEach","aboutCtrl","about","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","validator","trim","test"],"sourceRoot":""}